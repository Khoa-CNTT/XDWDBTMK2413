@model IEnumerable<RestaurantTableSystem.Models.Restaurant>

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body, html {
        height: 100%;
    }

    .hero {
        position: relative;
        width: 100%;
        height: 50vh; /* chỉ chiếm nửa màn hình */
        background-size: cover;
        background-position: center;
        transition: background-image 1s ease-in-out;
    }

    .overlay {
        position: absolute;
        inset: 0;
        background-color: rgba(0, 0, 0, 0.4);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1;
    }

        .overlay h1 {
            color: white;
            font-size: 2.5rem;
            text-align: center;
            opacity: 0;
            transition: opacity 0.5s ease-in-out;
        }

            .overlay h1.visible {
                opacity: 1;
            }
</style>


<section class="hero" id="hero">
    <div class="overlay">
        <h1 id="slideText"></h1>
    </div>
</section>



<!-- Bộ lọc và danh sách nhà hàng -->
<section class="py-16 bg-gray-100">
    <div class="container mx-auto px-4">
        <!-- Bộ lọc -->
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
            <h2 class="text-2xl font-bold mb-4">Lọc nhà hàng</h2>
            <form method="get" action="@Url.Action("Index", "Home")" class="grid grid-cols-1 md:grid-cols-5 gap-4">
                <div>
                    <label class="block text-gray-700 font-medium mb-2" for="addressFilter">Địa chỉ</label>
                    <input type="text" id="addressFilter" name="addressFilter" value="@Request.QueryString["addressFilter"]" placeholder="Nhập địa chỉ..." class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500">
                </div>
                <div>
                    <label class="block text-gray-700 font-medium mb-2" for="openingHoursFilter">Giờ mở cửa</label>
                    <select id="openingHoursFilter" name="openingHoursFilter" class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500">
                        <option value="">Tất cả</option>
                        <option value="before12" @(Request.QueryString["openingHoursFilter"] == "before12" ? "selected" : "")>Trước 12:00</option>
                        <option value="12to18" @(Request.QueryString["openingHoursFilter"] == "12to18" ? "selected" : "")>12:00 - 18:00</option>
                        <option value="after18" @(Request.QueryString["openingHoursFilter"] == "after18" ? "selected" : "")>Sau 18:00</option>
                    </select>
                </div>
                <div>
                    <label class="block text-gray-700 font-medium mb-2" for="isApprovedFilter">Trạng thái phê duyệt</label>
                    <select id="isApprovedFilter" name="isApprovedFilter" class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500">
                        <option value="">Tất cả</option>
                        <option value="approved" @(Request.QueryString["isApprovedFilter"] == "approved" ? "selected" : "")>Đã phê duyệt</option>
                        <option value="notapproved" @(Request.QueryString["isApprovedFilter"] == "notapproved" ? "selected" : "")>Chưa phê duyệt</option>
                    </select>
                </div>
                <div>
                    <label class="block text-gray-700 font-medium mb-2" for="categoryFilter">Loại nhà hàng</label>
                    <select id="categoryFilter" name="categoryFilter" class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500">
                        <option value="">Tất cả</option>
                        <option value="hàn quốc" @(Request.QueryString["categoryFilter"] == "hàn quốc" ? "selected" : "")>Hàn Quốc</option>
                        <option value="lẩu" @(Request.QueryString["categoryFilter"] == "lẩu" ? "selected" : "")>Lẩu</option>
                        <option value="nướng" @(Request.QueryString["categoryFilter"] == "nướng" ? "selected" : "")>Nướng</option>
                    </select>
                </div>
                <div class="flex items-end">
                    <button type="submit" class="w-full bg-amber-500 text-white px-4 py-2 rounded-lg hover:bg-amber-600 transition">Áp dụng bộ lọc</button>
                </div>
            </form>
        </div>

        <!-- Danh sách nhà hàng -->
        <div class="grid md:grid-cols-3 gap-8">
            @if (Model != null && Model.Any())
            {
                foreach (var restaurant in Model)
                {
                    string inferredCategory = "Chưa xác định";
                    if (!string.IsNullOrEmpty(restaurant.name))
                    {
                        if (restaurant.name.ToLower().Contains("hàn quốc") || restaurant.name.ToLower().Contains("gogi"))
                        {
                            inferredCategory = "Hàn Quốc";
                        }
                        else if (restaurant.name.ToLower().Contains("lẩu"))
                        {
                            inferredCategory = "Lẩu";
                        }
                        else if (restaurant.name.ToLower().Contains("nướng"))
                        {
                            inferredCategory = "Nướng";
                        }
                    }
                    if (inferredCategory == "Chưa xác định" && !string.IsNullOrEmpty(restaurant.description))
                    {
                        if (restaurant.description.ToLower().Contains("hàn quốc"))
                        {
                            inferredCategory = "Hàn Quốc";
                        }
                        else if (restaurant.description.ToLower().Contains("lẩu"))
                        {
                            inferredCategory = "Lẩu";
                        }
                        else if (restaurant.description.ToLower().Contains("nướng"))
                        {
                            inferredCategory = "Nướng";
                        }
                    }

                    <div class="bg-white rounded-xl shadow-md p-6 hover:shadow-lg transition">
                        <div class="mb-4 text-center">
                            <img src="@restaurant.Image" alt="Hình ảnh nhà hàng" class="w-full h-48 object-cover rounded-lg" />
                        </div>
                        <h2 class="text-xl font-semibold mb-2">@restaurant.name</h2>
                        <p class="text-gray-600"><strong>Địa chỉ:</strong> @restaurant.address</p>
                        <p class="text-gray-600"><strong>Giờ mở cửa:</strong> @restaurant.opening_hours</p>
                        <p class="text-gray-600"><strong>Loại:</strong> @inferredCategory</p>
                        <div class="mt-4 text-center">
                            <a href="@Url.Action("Index", "DetailNhaHang", new { id = restaurant.restaurant_id })"
                               class="bg-amber-500 text-white px-5 py-2 rounded-lg hover:bg-amber-600 transition">
                                Xem chi tiết
                            </a>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center text-gray-500">Không có nhà hàng nào phù hợp với bộ lọc của bạn.</p>
            }
        </div>
    </div>
</section>

<!-- Footer -->
<footer class="bg-gray-800 text-white py-12">
    <div class="container mx-auto px-4">
        <div class="grid md:grid-cols-3 gap-8">
            <div>
                <h3 class="heading text-2xl font-bold mb-4">Smart-Booking</h3>
                <p class="mb-4">03 Quang Trung, Hải Châu, Đà Nẵng</p>
                <p>Email: smart_booking@gmail.com</p>
            </div>
            <div>
                <h4 class="text-xl font-medium mb-4">Giờ mở cửa</h4>
                <p class="mb-2">Thứ 2 - Thứ 6: 11:00 - 22:00</p>
                <p>Thứ 7 - Chủ nhật: 10:00 - 23:00</p>
            </div>
            <div>
                <h4 class="text-xl font-medium mb-4">Theo dõi chúng tôi</h4>
                <div class="flex space-x-4">
                    <a href="#" class="text-2xl hover:text-amber-400 transition"><i class="fab fa-facebook"></i></a>
                    <a href="#" class="text-2xl hover:text-amber-400 transition"><i class="fab fa-instagram"></i></a>
                    <a href="#" class="text-2xl hover:text-amber-400 transition"><i class="fab fa-tiktok"></i></a>
                </div>
            </div>
        </div>
        <div class="border-t border-gray-700 mt-8 pt-8 text-center">
            <p>© 2025 Smart Booking. All rights reserved.</p>
        </div>
    </div>
</footer>
<script>
        const hero = document.getElementById('hero');
        const text = document.getElementById('slideText');

        const slides = [
            {
                image: "https://images.unsplash.com/photo-1555992336-cbf8a0e4b2d5?auto=format&fit=crop&w=1920&q=80",
                text: "Chào mừng đến với Smart Booking"
            },
            {
                image: "https://images.unsplash.com/photo-1528605248644-14dd04022da1?auto=format&fit=crop&w=1920&q=80",
                text: "Khám phá các nhà hàng tuyệt vời"
            },
            {
                image: "https://images.unsplash.com/photo-1600891964599-f61ba0e24092?auto=format&fit=crop&w=1920&q=80",
                text: "Đặt bàn dễ dàng, nhanh chóng"
            }
        ];

        let current = 0;

        function showSlide(index) {
            // Ẩn chữ trước
            text.classList.remove("visible");

            const img = new Image();
            img.onload = () => {
                hero.style.backgroundImage = `url('${slides[index].image}')`;
                text.textContent = slides[index].text;
                text.classList.add("visible");
            };
            img.src = slides[index].image;
        }

        showSlide(current); // Hiển thị slide đầu tiên

        setInterval(() => {
            current = (current + 1) % slides.length;
            showSlide(current);
        }, 3000);
</script>



