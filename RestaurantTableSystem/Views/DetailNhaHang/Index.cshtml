```html
@model RestaurantTableSystem.Models.ViewModels.RestaurantDetailViewModel
@{
    var restaurant = Model.Restaurant;
    var menuItems = Model.MenuItems;
    ViewBag.Title = restaurant.name;
    // Kiểm tra nếu có tham số showAll
    bool showAll = string.Equals(ViewContext.HttpContext.Request.QueryString["showAll"], "true", StringComparison.OrdinalIgnoreCase);
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWixU2PqA1jN+AOzQZF4u6Z0o0O4kA8l0z8w==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Roboto:wght@300;400;500&display=swap" rel="stylesheet" />
    <!-- Thêm CDN Leaflet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f8f1e9;
        }

        .heading {
            font-family: 'Playfair Display', serif;
        }

        .section-container {
            background: white;
            border: 1px solid #e5e7eb;
            border-radius: 1rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

            .section-container:hover {
                box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
            }

        .menu-section {
            background: linear-gradient(to bottom, #fff7ed, #ffffff);
            border: 2px solid #f59e0b;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

            .menu-section h2 {
                font-size: 2rem;
                color: #d97706;
                text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
            }

            .menu-section h3 {
                font-size: 1.5rem;
                color: #b45309;
                border-bottom: 2px solid #f59e0b;
                padding-bottom: 0.5rem;
            }

        .menu-item {
            transition: transform 0.2s;
        }

            .menu-item:hover {
                transform: translateY(-2px);
            }

            .menu-item img {
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }

        .divider {
            border-top: 1px solid #e5e7eb;
            margin: 2rem 0;
        }

        .filter-btn {
            background-color: #e5e7eb;
            color: #374151;
            padding: 0.5rem 1.5rem;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }

            .filter-btn:hover {
                background-color: #d1d5db;
            }

            .filter-btn.active {
                background-color: #f59e0b;
                color: white;
            }

        .star-rating input[type="radio"] {
            display: none;
        }

        .star-rating label {
            cursor: pointer;
            color: #d1d5db;
            transition: color 0.2s;
            font-size: 1.5rem;
        }

        .star-rating input[type="radio"]:checked ~ label,
        .star-rating input[type="radio"]:checked + label {
            color: #f59e0b;
        }

        .star-rating label:hover,
        .star-rating label:hover ~ label {
            color: #f59e0b;
        }
    </style>
</head>

<body>
    <!-- Section 1: Restaurant Image and Name (Full-Width) -->
    <section class="py-8">
        <div class="px-4">
            <div class="section-container w-full text-center p-8">
                @if (!string.IsNullOrEmpty(restaurant.Image))
                {
                    <div class="w-full h-96">
                        <img src="@Url.Content(restaurant.Image)" alt="@restaurant.name" class="w-full h-full object-cover rounded-xl" onerror="this.style.display='none'; console.log('Restaurant image failed to load for @restaurant.name');" />
                    </div>
                }
                else
                {
                    <div class="w-full h-96 bg-gray-200 rounded-xl flex items-center justify-center">
                        <span class="text-gray-500">Không có hình ảnh</span>
                    </div>
                }
                <h1 class="text-4xl font-bold mt-4 heading text-gray-800">@restaurant.name</h1>
            </div>
        </div>
    </section>

    <!-- Section 2: Description and Information (Full-Width) -->
    <section class="py-8">
        <div class="px-4">
            <div class="section-container w-full p-8">
                <h2 class="text-2xl font-semibold mb-4 heading text-gray-800">Thông Tin Nhà Hàng</h2>
                <div class="divider"></div>
                <p class="text-gray-600 mb-2"><strong>Mô tả:</strong> @restaurant.description</p>
                <p class="text-gray-600 mb-2"><strong>Địa chỉ:</strong> @restaurant.address</p>
                <p class="text-gray-600 mb-2"><strong>Số bàn tối đa:</strong> @restaurant.max_tables</p>
                <p class="text-gray-600 mb-2"><strong>Giờ mở cửa:</strong> @restaurant.opening_hours</p>
                <!-- Bản đồ nhỏ -->
                <div class="mt-6">
                    <h3 class="text-xl font-medium mb-2">Vị trí nhà hàng</h3>
                    <div id="map" style="height: 300px; width: 100%; border-radius: 1rem; border: 1px solid #e5e7eb;"></div>
                </div>
            </div>
        </div>
    </section>

    <!-- Section 3: Featured Dishes (BestSeller) and Full Menu -->
    <section class="py-8">
        <div class="container mx-auto px-4">
            <div class="section-container menu-section max-w-4xl mx-auto p-6">
                <!-- BestSeller Section -->
                <h2 class="text-2xl font-semibold mb-4 heading text-center">Món Ăn Nổi Bật</h2>
                <div class="divider"></div>
                @{
                    var mainMenuItems = menuItems.Where(m => m.category?.ToLower() == "main" && m.is_available == true).ToList();
                }
                @if (mainMenuItems.Any())
                {
                    <ul class="space-y-4 mb-8">
                        @foreach (var item in mainMenuItems)
                        {
                            <li class="menu-item border-b pb-4 flex items-center gap-4">
                                @if (!string.IsNullOrEmpty(item.Image))
                                {
                                    <img src="@Url.Content(item.Image)" alt="@item.name" class="w-20 h-20 object-cover rounded-lg" onerror="this.style.display='none'; console.log('Image failed to load for @item.name');" />
                                }
                                else
                                {
                                    <div class="w-20 h-20 bg-gray-200 rounded-lg flex items-center justify-center">
                                        <span class="text-gray-500">Không có hình ảnh</span>
                                    </div>
                                }
                                <div class="flex-1">
                                    <div class="flex justify-between text-gray-800">
                                        <span class="font-medium text-lg">@item.name</span>
                                        <span class="text-amber-500 font-semibold">@item.price.ToString("C")</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(item.description))
                                    {
                                        <p class="text-sm text-gray-500 mt-1">@item.description</p>
                                    }
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-gray-500 text-center mb-8">Chưa có món chính nào được thêm.</p>
                }

                <!-- Full Menu Section with Filter -->
                <h2 class="text-2xl font-semibold mb-4 heading text-center">Thực Đơn</h2>
                <div class="divider"></div>
                <div class="flex justify-center space-x-4 mb-6">
                    <button class="filter-btn active" onclick="filterMenu('all')">Tất cả</button>
                    <button class="filter-btn" onclick="filterMenu('main')">Món chính</button>
                    <button class="filter-btn" onclick="filterMenu('drink')">Đồ uống</button>
                    <button class="filter-btn" onclick="filterMenu('appetizer')">Khai vị</button>
                </div>
                <ul id="menuItems" class="space-y-4">
                    @foreach (var item in menuItems.Where(m => m.is_available == true))
                    {
                        <li class="menu-item border-b pb-4 flex items-center gap-4" data-category="@(item.category?.ToLower() ?? "other")">
                            @if (!string.IsNullOrEmpty(item.Image))
                            {
                                <img src="@Url.Content(item.Image)" alt="@item.name" class="w-20 h-20 object-cover rounded-lg" onerror="this.style.display='none'; console.log('Image failed to load for @item.name');" />
                            }
                            else
                            {
                                <div class="w-20 h-20 bg-gray-200 rounded-lg flex items-center justify-center">
                                    <span class="text-gray-500">Không có hình ảnh</span>
                                </div>
                            }
                            <div class="flex-1">
                                <div class="flex justify-between text-gray-800">
                                    <span class="font-medium text-lg">@item.name</span>
                                    <span class="text-amber-500 font-semibold">@item.price.ToString("C")</span>
                                </div>
                                @if (!string.IsNullOrEmpty(item.description))
                                {
                                    <p class="text-sm text-gray-500 mt-1">@item.description</p>
                                }
                            </div>
                        </li>
                    }
                </ul>
                @if (!menuItems.Any(m => m.is_available == true))
                {
                    <p class="text-gray-500 text-center">Chưa có món nào được thêm.</p>
                }
            </div>
        </div>
    </section>

    <!-- Section 4: Reservation -->
    <section class="py-8">
        <div class="container mx-auto px-4">
            <div class="section-container max-w-4xl mx-auto p-6 text-center">
                <h2 class="text-2xl font-semibold mb-4 heading">Đặt Bàn Ngay</h2>
                <div class="divider"></div>
                <div class="flex justify-center">
                    <a href="@Url.Action("DatBan", "DatBan", new { id = restaurant.restaurant_id })" class="bg-amber-500 text-white px-6 py-3 rounded-lg hover:bg-amber-600 transition">
                        Đặt Bàn
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- Section 5: Reviews -->
    <section class="py-8">
        <div class="container mx-auto px-4">
            <div class="section-container max-w-4xl mx-auto p-6">
                <h2 class="text-2xl font-semibold mb-4 heading text-center">Đánh Giá Nhà Hàng</h2>
                <div class="divider"></div>

                <!-- Success/Error Messages -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6 rounded">
                        <p>@TempData["SuccessMessage"]</p>
                    </div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6 rounded">
                        <p>@TempData["ErrorMessage"]</p>
                    </div>
                }

                <!-- Review Form -->
                <div class="mb-8">
                    <h3 class="text-xl font-medium mb-4">Viết Đánh Giá Của Bạn</h3>
                    @using (Html.BeginForm("SubmitReview", "DetailNhaHang", new { restaurantId = Model.Restaurant.restaurant_id }, FormMethod.Post, new { @class = "space-y-4" }))
                    {
                        @Html.AntiForgeryToken()
                        <div>
                            <label class="block text-gray-700 font-medium mb-2">Điểm đánh giá</label>
                            <div class="star-rating flex space-x-1 mb-4">
                                <input type="radio" id="rating5" name="rating" value="5" required />
                                <label for="rating5"><i class="fas fa-star"></i></label>
                                <input type="radio" id="rating4" name="rating" value="4" />
                                <label for="rating4"><i class="fas fa-star"></i></label>
                                <input type="radio" id="rating3" name="rating" value="3" />
                                <label for="rating3"><i class="fas fa-star"></i></label>
                                <input type="radio" id="rating2" name="rating" value="2" />
                                <label for="rating2"><i class="fas fa-star"></i></label>
                                <input type="radio" id="rating1" name="rating" value="1" />
                                <label for="rating1"><i class="fas fa-star"></i></label>
                            </div>
                            @Html.ValidationMessage("rating", new { @class = "text-red-500 text-sm" })
                        </div>
                        <div>
                            <label for="comment" class="block text-gray-700 font-medium mb-2">Bình luận</label>
                            <textarea name="comment" id="comment" rows="4" class="w-full border rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-amber-500" placeholder="Chia sẻ cảm nhận của bạn..."></textarea>
                            @Html.ValidationMessage("comment", new { @class = "text-red-500 text-sm" })
                        </div>
                        <div class="flex justify-center">
                            <button type="submit" class="bg-amber-500 text-white px-6 py-3 rounded-lg hover:bg-amber-600 transition">Gửi Đánh Giá</button>
                        </div>
                    }
                </div>

                <!-- Display Reviews -->
                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    <h3 class="text-xl font-medium mb-4">Các Đánh Giá</h3>
                    <div class="space-y-4">
                        @{
                            var reviewsToShow = showAll ? Model.Reviews.OrderByDescending(r => r.created_at).ToList() : Model.Reviews.OrderByDescending(r => r.created_at).Take(4).ToList();
                        }
                        @foreach (var review in reviewsToShow)
                        {
                            <div class="border-b pb-4">
                                <div class="flex items-center justify-between mb-2">
                                    <div class="flex items-center">
                                        <div class="flex">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="fas fa-star @(i <= review.rating ? "text-amber-500" : "text-gray-300")"></i>
                                            }
                                        </div>
                                        <span class="ml-2 text-gray-700 font-medium">
                                            @(review.User != null ? review.User.full_name : "Ẩn danh")
                                        </span>
                                    </div>
                                    <span class="text-gray-500 text-sm">
                                        @(review.created_at.HasValue ? review.created_at.Value.ToString("dd/MM/yyyy HH:mm") : "Không có ngày")
                                    </span>
                                </div>
                                <p class="text-gray-600">@review.comment</p>
                            </div>
                        }
                        @if (!showAll && Model.Reviews.Count > 4)
                        {
                            <div class="text-center mt-4">
                                <a href="@Url.Action("AllReviews", "DetailNhaHang", new { id = restaurant.restaurant_id, showAll = "true" })" class="text-amber-500 hover:text-amber-600 underline">
                                    Xem tất cả đánh giá
                                </a>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-gray-500 text-center">Chưa có đánh giá nào cho nhà hàng này.</p>
                }
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="bg-gray-800 text-white py-12">
        <div class="container mx-auto px-4">
            <div class="grid md:grid-cols-3 gap-8">
                <div>
                    <h3 class="heading text-2xl font-bold mb-4">Smart Booking</h3>
                    <p class="mb-4">Đặt bàn nhà hàng dễ dàng và nhanh chóng</p>
                    <p>Email: booking@smartbooking.com</p>
                </div>
                <div>
                    <h4 class="text-xl font-medium mb-4">Hỗ trợ</h4>
                    <p class="mb-2">Hotline: 1900 1234</p>
                    <p>Giờ làm việc: 8:00 - 22:00</p>
                </div>
                <div>
                    <h4 class="text-xl font-medium mb-4">Theo dõi chúng tôi</h4>
                    <div class="flex space-x-4">
                        <a href="#" class="text-2xl hover:text-amber-400 transition"><i class="fab fa-facebook"></i></a>
                        <a href="#" class="text-2xl hover:text-amber-400 transition"><i class="fab fa-instagram"></i></a>
                        <a href="#" class="text-2xl hover:text-amber-400 transition"><i class="fab fa-tiktok"></i></a>
                    </div>
                </div>
            </div>
            <div class="border-t border-gray-700 mt-8 pt-8 text-center">
                <p>© 2025 Smart Booking. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Script bản đồ -->
    <script>
        // Khởi tạo bản đồ với Leaflet
        var lat = @restaurant.latitude;
        var lng = @restaurant.longitude;
        if (lat && lng && !isNaN(lat) && !isNaN(lng)) {
            var map = L.map('map').setView([lat, lng], 15);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                maxZoom: 18,
                tileSize: 512,
                zoomOffset: -1
            }).addTo(map);
            L.marker([lat, lng]).addTo(map)
                .bindPopup('<b>@restaurant.name</b><br>@restaurant.address')
                .openPopup();
        } else {
            document.getElementById('map').innerHTML = '<p class="text-gray-500 text-center pt-20">Không có thông tin vị trí.</p>';
        }
    </script>

    <!-- Script lọc thực đơn -->
    <script>
        function filterMenu(category) {
            const items = document.querySelectorAll('#menuItems .menu-item');
            const buttons = document.querySelectorAll('.filter-btn');

            buttons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');

            items.forEach(item => {
                const itemCategory = item.getAttribute('data-category');
                if (category === 'all' || itemCategory === category) {
                    item.style.display = 'flex';
                } else {
                    item.style.display = 'none';
                }
            });
        }

        // Initialize with "all" category
        filterMenu('all');
    </script>
</body>
</html>
