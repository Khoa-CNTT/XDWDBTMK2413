<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @RenderSection("styles", required: false)
    <style>
        body {
            font-family: 'Roboto', sans-serif;
        }

        .heading {
            font-family: 'Playfair Display', serif;
        }

        /* Tùy chỉnh giao diện chatbot */
        .tudong-chatbox-container {
            bottom: 20px !important;
            right: 20px !important; /* Quay lại góc phải để dễ nhận diện */
            left: auto !important;
        }

        .tudong-chatbox-button {
            width: 70px !important;
            height: 70px !important;
            background-color: #ef4444 !important; /* Màu đỏ nổi bật (red-500) */
            border-radius: 50% !important;
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2) !important; /* Hiệu ứng bóng */
        }

            .tudong-chatbox-button:hover {
                background-color: #dc2626 !important; /* Màu đỏ đậm hơn khi hover (red-600) */
            }

            .tudong-chatbox-button::before {
                content: "\f075"; /* Icon chat từ Font Awesome */
                font-family: "Font Awesome 6 Free" !important;
                font-weight: 900 !important;
                color: white !important;
                font-size: 24px !important;
            }

        .tudong-chatbox-window {
            width: 350px !important;
            border-radius: 10px !important;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1) !important;
            border: 2px solid #ef4444 !important; /* Viền đỏ để nổi bật */
        }

        /* Tùy chỉnh nội dung cửa sổ (nếu có thể) */
        .tudong-chatbox-header {
            background-color: #ef4444 !important; /* Đầu cửa sổ màu đỏ */
            color: white !important;
            font-weight: bold !important;
        }
    </style>
</head>
<body class="bg-gray-50">
    @{
        var controller = ViewContext.RouteData.Values["controller"]?.ToString();
        var action = ViewContext.RouteData.Values["action"]?.ToString();

        if (!(controller == "Account" && (action == "Login" || action == "Register" || action == "ForgotPassword")))
        {
            <header class="bg-white shadow-md">
                <div class="container mx-auto px-4 py-6 flex justify-between items-center">
                    <h1><a href="@Url.Action("Index", "Home")" class="heading text-3xl font-bold text-gray-800">Smart-Booking</a></h1>
                    <nav class="flex items-center space-x-8">
                        <div class="relative">
                            <form method="get" action="@Url.Action("Index", "Home")">
                                <input type="text" name="search" placeholder="Tìm kiếm nhà hàng..." value="@Request.QueryString["search"]" class="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500">
                                <button type="submit" class="absolute right-2 top-2 text-gray-700 hover:text-amber-600 transition">
                                    <i class="fas fa-search"></i>
                                </button>
                            </form>
                        </div>
                        <ul class="flex space-x-8 items-center">
                            <li><a href="@Url.Action("Index", "Home")" class="text-gray-700 hover:text-amber-600 transition">Trang chủ</a></li>
                            <li><a href="@Url.Action("Index", "Businesss")" class="text-gray-700 hover:text-amber-600 transition">Đăng Kí Nhà Hàng</a></li>
                            <li><a @Html.Action("NotificationCount", "ThongBaoUser")></a></li>
                            @if (Session["user"] == null)
                            {
                                <li><a href="@Url.Action("Login", "Account")" class="text-gray-700 hover:text-amber-600 transition">Login</a></li>
                                <li><a href="@Url.Action("Register", "Account")" class="text-gray-700 hover:text-amber-600 transition">Register</a></li>
                            }
                            else
                            {
                                var user = (RestaurantTableSystem.Models.User)Session["user"];
                                <li class="relative">
                                    <button id="profileMenuToggle" class="flex items-center space-x-2 text-gray-700 hover:text-amber-600 transition focus:outline-none">
                                        <i class="fas fa-user-circle text-2xl"></i>
                                        <span>@user.full_name</span>
                                    </button>
                                    <ul id="dropdownMenu" class="hidden absolute bg-white border rounded-lg shadow-lg mt-2 py-2 right-0 w-40 z-50">
                                        <li><a href="@Url.Action("Logout", "Account")" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Đăng xuất</a></li>
                                        <li><a href="@Url.Action("AccountInfo", "Account")" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Profile</a></li>
                                        <li><a href="@Url.Action("DanhSachBanDaDat", "DatBan")" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Bàn Đặt</a></li>
                                    </ul>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </header>
        }
    }

    <div class="container body-content">
        @RenderBody()
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <!-- Dropdown Script -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toggle = document.getElementById("profileMenuToggle");
            const menu = document.getElementById("dropdownMenu");

            toggle?.addEventListener("click", function (e) {
                e.stopPropagation();
                menu?.classList.toggle("hidden");
            });

            document.addEventListener("click", function (e) {
                if (!menu?.contains(e.target) && !toggle?.contains(e.target)) {
                    menu?.classList.add("hidden");
                }
            });
        });
    </script>

    <!-- Chatbot Script (Conditional) -->
    @{
        if (!(controller == "Account" && (action == "Login" || action == "Register" || action == "ForgotPassword")))
        {
            <script src="https://app.tudongchat.com/js/chatbox.js"></script>
            <script>
                const tudong_chatbox = new TuDongChat('ar5BUmAGM0506hTV-vGwk');
                tudong_chatbox.initial();

                // Tùy chỉnh (nếu API hỗ trợ, cần kiểm tra tài liệu)
                // Ví dụ giả định: tudong_chatbox.setButtonColor('#ef4444');
            </script>
        }
    }
</body>
</html>