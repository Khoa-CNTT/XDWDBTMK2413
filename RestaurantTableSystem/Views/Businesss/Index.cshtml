@model RestaurantTableSystem.Models.Restaurant

@{
    ViewBag.Title = "Đăng ký Doanh nghiệp";
    bool isEdit = ViewBag.IsEdit != null && (bool)ViewBag.IsEdit;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-minimap/dist/Control.MiniMap.min.css" />

    <style>
        body {
            background-image: url('https://images.unsplash.com/photo-1541542684-4a312aadef7e'); /* ảnh nền phong cách nhà hàng */
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            background-repeat: no-repeat;
            font-family: 'Segoe UI', sans-serif;
        }

        .card {
            border-radius: 20px;
            background: #ffffff;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
            border: none;
        }

        .card h2 {
            font-weight: bold;
            color: #2c3e50;
        }

        .form-label {
            font-weight: 600;
            color: #34495e;
        }

        .form-control {
            border-radius: 12px;
            border: 1px solid #ced4da;
            padding: 10px 14px;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
        }

        #map {
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .btn-primary, .btn-warning {
            padding: 10px;
            font-weight: 600;
            font-size: 16px;
            border-radius: 12px;
        }

        .alert {
            border-radius: 10px;
        }

        media (max-width: 768px) {
            .card {
                padding: 2rem 1.5rem;
            }
        }
    </style>
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg p-4">
                <h2 class="text-center mb-4">@ViewBag.Title</h2>

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger">@TempData["Error"]</div>
                }

                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success">@TempData["Success"]</div>
                }

                @using (Html.BeginForm("Index", "Businesss", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-store me-2 text-primary"></i>Tên doanh nghiệp</label>
                        @Html.TextBoxFor(m => m.name, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-map-marker-alt me-2 text-danger"></i>Địa chỉ</label>
                        @Html.TextBoxFor(m => m.address, new { @class = "form-control", required = "required", id = "address" })
                    </div>

                    <h5 class="text-muted mb-2"><i class="fas fa-map-location-dot me-2 text-primary"></i>Chọn vị trí trên bản đồ</h5>
                    <div id="map" style="height: 300px; width: 100%; margin-bottom: 15px;"></div>
                    <input type="hidden" id="latitude" name="latitude" value="@Model.latitude" />
                    <input type="hidden" id="longitude" name="longitude" value="@Model.longitude" />

                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-align-left me-2 text-info"></i>Mô tả</label>
                        @Html.TextAreaFor(m => m.description, new { @class = "form-control", rows = 3 })
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-chair me-2 text-success"></i>Số bàn tối đa</label>
                        @Html.TextBoxFor(m => m.max_tables, new { @class = "form-control", type = "number", min = "1", required = "required" })
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-clock me-2 text-warning"></i>Giờ mở cửa</label>
                        @Html.TextBoxFor(m => m.opening_hours, new { @class = "form-control", type = "time", required = "required" })
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-image me-2 text-secondary"></i>Hình ảnh Doanh nghiệp</label>
                        <input type="file" name="ImageUpload" class="form-control" accept="image/*" />
                    </div>

                    if (isEdit)
                    {
                        <button type="submit" class="btn btn-warning w-100"><i class="fas fa-edit me-2"></i>Cập nhật</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary w-100"><i class="fas fa-paper-plane me-2"></i>Đăng ký</button>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-minimap/dist/Control.MiniMap.min.js"></script>
    <script>
        const mainLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap contributors'
        });

        const map = L.map('map', {
            layers: [mainLayer],
            center: [@Model.latitude, @Model.longitude],
            zoom: 13
        });

        let marker = L.marker([@Model.latitude, @Model.longitude], { draggable: true }).addTo(map);

        const miniMapLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
        const miniMap = new L.Control.MiniMap(miniMapLayer, { toggleDisplay: true }).addTo(map);

        document.getElementById("latitude").value = @Model.latitude;
        document.getElementById("longitude").value = @Model.longitude;

        marker.on('dragend', function () {
            const latlng = marker.getLatLng();
            document.getElementById("latitude").value = latlng.lat;
            document.getElementById("longitude").value = latlng.lng;
        });

        document.getElementById("address").addEventListener("change", function () {
            const address = this.value;
            fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`)
                .then(response => response.json())
                .then(data => {
                    if (data && data.length > 0) {
                        const lat = parseFloat(data[0].lat);
                        const lon = parseFloat(data[0].lon);
                        map.setView([lat, lon], 15);
                        marker.setLatLng([lat, lon]);
                        document.getElementById("latitude").value = lat;
                        document.getElementById("longitude").value = lon;
                    } else {
                        alert("Không tìm thấy vị trí");
                    }
                })
                .catch(err => {
                    console.error(err);
                    alert("Lỗi khi tìm kiếm địa chỉ");
                });
        });

        map.on("click", function (e) {
            const lat = e.latlng.lat;
            const lng = e.latlng.lng;
            marker.setLatLng([lat, lng]);
            document.getElementById("latitude").value = lat;
            document.getElementById("longitude").value = lng;
        });
    </script>
}
